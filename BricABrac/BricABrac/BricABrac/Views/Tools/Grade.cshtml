@model BricABrac.Models.StudentGradeModel

<h1>Grades</h1>


<a class="btn btn-primary nav-link text-white" asp-area="" asp-controller="Tools" asp-action="CreateModule">Add a module</a>

@if (Model.Modules.Count > 0)
{
    <a class="btn btn-primary nav-link text-white" asp-area="" asp-controller="Tools" asp-action="CreateSubject">Add a subject</a>
}

@if (Model.Subjects.Count > 0)
{
    <a class="btn btn-primary nav-link text-white" asp-area="" asp-controller="Tools" asp-action="CreateGrade">Add a grade</a>
}




@if (ViewBag.EditMode == 1)
{
    <a class="btn btn-primary nav-link text-white" style="float:right;" asp-controller="Tools" asp-action="EditMode">Normal Mode</a>
    <hr/>
    <div class="container">

        @foreach (var item in Model.Modules)
        {

            <div class="panel panel-default">
                <div class="panel-heading">
                    <h2>
                        @Html.DisplayTextFor(modelItem => item.Name)
                        @Html.ActionLink("", "EditModule", new { id = item.Id }, new { @class = "glyphicon glyphicon-pencil" })
                    </h2>
                </div>

                <div class="panel-body">
                    @{
                        decimal average_module = 0;
                        decimal coef_module = 0;
                    }

                    @foreach (var item2 in Model.Subjects)
                    {
                        if (@Html.DisplayTextFor(modelItem => item.Id) == @Html.DisplayTextFor(modelItem => item2.Moduleid))
                        {

                            <h3>
                                @Html.DisplayTextFor(modelItem => item2.Name)
                                @Html.ActionLink("", "EditSubject", new { id = item2.Id }, new { @class = "glyphicon glyphicon-pencil" })
                            </h3>
                            <p>(Coeffient: @Html.DisplayTextFor(modelItem => item2.Coefficient))</p>

                            <table class="table table-striped">
                                <thead>

                                <td></td>
                                @foreach (var item3 in Model.Grades)
                                {
                                    if (@Html.DisplayTextFor(modelItem => item2.Id) == @Html.DisplayTextFor(modelItem => item3.Subjectid)
                                        && Boolean.Parse(@Html.DisplayTextFor(modelItem => item3.IsExam)) != true)
                                    {
                                        <td></td>
                                    }
                                }

                                @{int counter = 0;}
                                @foreach (var item3 in Model.Grades)
                                {
                                    if (@Html.DisplayTextFor(modelItem => item2.Id) == @Html.DisplayTextFor(modelItem => item3.Subjectid)
                                    && Boolean.Parse(@Html.DisplayTextFor(modelItem => item3.IsExam)) != false)
                                    {
                                        <td style="width:10%;">Exam @(++counter)</td>
                                    }
                                }
                                @if (counter != 0)
                                {
                                    <td>Exam Average</td>
                                }
                                <td style="width:0.1%;">Average</td>

                                </thead>

                                @{
                                    decimal average_grade = 0;
                                    decimal coef_grade = 0;
                                    decimal average_exam = 0;
                                    decimal coef_exam = 0;
                                }
                                <tr>
                                    <td>Grades</td>

                                    @foreach (var item3 in Model.Grades)
                                    {
                                        if (@Html.DisplayTextFor(modelItem => item2.Id) == @Html.DisplayTextFor(modelItem => item3.Subjectid)
                                            && Boolean.Parse(@Html.DisplayTextFor(modelItem => item3.IsExam)) != true)
                                        {

                                            <td>
                                                @Html.DisplayTextFor(modelItem => item3.Grade)
                                                @Html.ActionLink("", "EditGrade", new { id = item3.Id }, new { @class = "glyphicon glyphicon-pencil" })
                                            </td>

                                            average_grade += Decimal.Parse(@Html.DisplayTextFor(modelItem => item3.Grade)) * Decimal.Parse(@Html.DisplayTextFor(modelItem => item3.Coefficient));
                                            coef_grade += Decimal.Parse(@Html.DisplayTextFor(modelItem => item3.Coefficient));
                                        }
                                    }
                                    @foreach (var item3 in Model.Grades)
                                    {
                                        if (@Html.DisplayTextFor(modelItem => item2.Id) == @Html.DisplayTextFor(modelItem => item3.Subjectid)
                                            && Boolean.Parse(@Html.DisplayTextFor(modelItem => item3.IsExam)) != false)
                                        {

                                            <td>
                                                @Html.DisplayTextFor(modelItem => item3.Grade)
                                                @Html.ActionLink("", "EditGrade", new { id = item3.Id }, new { @class = "glyphicon glyphicon-pencil" })
                                            </td>

                                            average_exam += Decimal.Parse(@Html.DisplayTextFor(modelItem => item3.Grade)) * Decimal.Parse(@Html.DisplayTextFor(modelItem => item3.Coefficient));
                                            coef_exam += Decimal.Parse(@Html.DisplayTextFor(modelItem => item3.Coefficient));
                                        }
                                    }
                                </tr>
                                <tr>
                                    <td style="width:20%;">Coefficients</td>


                                    @foreach (var item3 in Model.Grades)
                                    {
                                        if (@Html.DisplayTextFor(modelItem => item2.Id) == @Html.DisplayTextFor(modelItem => item3.Subjectid)
                                            && Boolean.Parse(@Html.DisplayTextFor(modelItem => item3.IsExam)) != true)
                                        {
                                            <td>
                                                @Html.DisplayTextFor(modelItem => item3.Coefficient)
                                            </td>
                                        }
                                    }
                                    @foreach (var item3 in Model.Grades)
                                    {
                                        if (@Html.DisplayTextFor(modelItem => item2.Id) == @Html.DisplayTextFor(modelItem => item3.Subjectid)
                                            && Boolean.Parse(@Html.DisplayTextFor(modelItem => item3.IsExam)) != false)
                                        {
                                            <td>
                                                @Html.DisplayTextFor(modelItem => item3.Coefficient)
                                            </td>
                                        }
                                    }

                                    @if (coef_exam != 0 || average_exam != 0)
                                    {
                                        if (Int16.Parse(@Html.DisplayTextFor(modelItem => item.SchoolYear)) == 3)
                                        {
                                            coef_exam = coef_exam / 2;
                                            average_exam = average_exam / 2;
                                        }

                                        average_exam = average_exam / coef_exam;
                                        average_module += (average_exam * coef_exam);
                                        coef_module += coef_exam;

                                        average_exam = System.Math.Round(average_exam, 2);
                                        <td style="width:5%;"><b> @average_exam </b></td>
                                    }

                                    @if (coef_grade != 0 || average_grade != 0)
                                    {
                                        decimal coef_subject = Decimal.Parse(@Html.DisplayTextFor(modelItem => item2.Coefficient));

                                        average_grade = average_grade / coef_grade;
                                        average_module += (average_grade * coef_subject);

                                        coef_module += coef_subject;

                                        average_grade = System.Math.Round(average_grade, 2);
                                        <td style="width:5%;"><b> @average_grade </b></td>
                                    }

                                </tr>
                            </table>
                        }
                    }
                </div>
                    @if (coef_module != 0 || average_module != 0)
                    {
                        average_module = average_module / coef_module;
                        average_module = System.Math.Round(average_module, 2);
                        <div class="panel-footer">
                            <h3>Average in the module : @average_module</h3>
                        </div>
                    }
                
            </div>
        }
    </div>

}
else
{

    <a class="btn btn-primary nav-link text-white" style="float:right;" asp-controller="Tools" asp-action="EditMode">Edit Mode</a>
    <hr />
    <div class="container">

        @foreach (var item in Model.Modules)
        {

        <div class="panel panel-default">
            <div class="panel-heading">
                <h2>@Html.DisplayTextFor(modelItem => item.Name)</h2>
            </div>

            <div class="panel-body">
                @{
                    decimal average_module = 0;
                    decimal coef_module = 0;
                }

                @foreach (var item2 in Model.Subjects)
                {
                    if (@Html.DisplayTextFor(modelItem => item.Id) == @Html.DisplayTextFor(modelItem => item2.Moduleid))
                    {

                        <h3>@Html.DisplayTextFor(modelItem => item2.Name) </h3>
                        <p>(Coeffient: @Html.DisplayTextFor(modelItem => item2.Coefficient))</p>

                        <table class="table table-striped">
                            <thead>

                            <td></td>
                            @foreach (var item3 in Model.Grades)
                            {
                                if (@Html.DisplayTextFor(modelItem => item2.Id) == @Html.DisplayTextFor(modelItem => item3.Subjectid)
                                    && Boolean.Parse(@Html.DisplayTextFor(modelItem => item3.IsExam)) != true)
                                {
                                    <td></td>
                                }
                            }

                            @{int counter = 0;}
                            @foreach (var item3 in Model.Grades)
                            {
                                if (@Html.DisplayTextFor(modelItem => item2.Id) == @Html.DisplayTextFor(modelItem => item3.Subjectid)
                                && Boolean.Parse(@Html.DisplayTextFor(modelItem => item3.IsExam)) != false)
                                {
                                    <td style="width:10%;">Exam @(++counter)</td>
                                }
                            }
                            @if (counter != 0)
                            {
                                <td>Exam Average</td>
                            }
                            <td style="width:0.1%;">Average</td>

                            </thead>

                            @{
                                decimal average_grade = 0;
                                decimal coef_grade = 0;
                                decimal average_exam = 0;
                                decimal coef_exam = 0;
                            }
                            <tr>
                                <td>Grades</td>

                                @foreach (var item3 in Model.Grades)
                                {
                                    if (@Html.DisplayTextFor(modelItem => item2.Id) == @Html.DisplayTextFor(modelItem => item3.Subjectid)
                                        && Boolean.Parse(@Html.DisplayTextFor(modelItem => item3.IsExam)) != true)
                                    {

                                        <td>
                                            @Html.DisplayTextFor(modelItem => item3.Grade)
                                        </td>

                                        average_grade += Decimal.Parse(@Html.DisplayTextFor(modelItem => item3.Grade)) * Decimal.Parse(@Html.DisplayTextFor(modelItem => item3.Coefficient));
                                        coef_grade += Decimal.Parse(@Html.DisplayTextFor(modelItem => item3.Coefficient));
                                    }
                                }
                                @foreach (var item3 in Model.Grades)
                                {
                                    if (@Html.DisplayTextFor(modelItem => item2.Id) == @Html.DisplayTextFor(modelItem => item3.Subjectid)
                                        && Boolean.Parse(@Html.DisplayTextFor(modelItem => item3.IsExam)) != false)
                                    {

                                        <td>
                                            @Html.DisplayTextFor(modelItem => item3.Grade)
                                        </td>

                                        average_exam += Decimal.Parse(@Html.DisplayTextFor(modelItem => item3.Grade)) * Decimal.Parse(@Html.DisplayTextFor(modelItem => item3.Coefficient));
                                        coef_exam += Decimal.Parse(@Html.DisplayTextFor(modelItem => item3.Coefficient));
                                    }
                                }
                            </tr>
                            <tr>
                                <td style="width:20%;">Coefficients</td>


                                @foreach (var item3 in Model.Grades)
                                {
                                    if (@Html.DisplayTextFor(modelItem => item2.Id) == @Html.DisplayTextFor(modelItem => item3.Subjectid)
                                        && Boolean.Parse(@Html.DisplayTextFor(modelItem => item3.IsExam)) != true)
                                    {
                                        <td>
                                            @Html.DisplayTextFor(modelItem => item3.Coefficient)
                                        </td>
                                    }
                                }
                                @foreach (var item3 in Model.Grades)
                                {
                                    if (@Html.DisplayTextFor(modelItem => item2.Id) == @Html.DisplayTextFor(modelItem => item3.Subjectid)
                                        && Boolean.Parse(@Html.DisplayTextFor(modelItem => item3.IsExam)) != false)
                                    {
                                        <td>
                                            @Html.DisplayTextFor(modelItem => item3.Coefficient)
                                        </td>
                                    }
                                }

                                @if (coef_exam != 0 || average_exam != 0)
                                {
                                    if (Int16.Parse(@Html.DisplayTextFor(modelItem => item.SchoolYear)) == 3)
                                    {
                                        coef_exam = coef_exam / 2;
                                        average_exam = average_exam / 2;
                                    }

                                    average_exam = average_exam / coef_exam;
                                    average_module += (average_exam * coef_exam);
                                    coef_module += coef_exam;

                                    average_exam = System.Math.Round(average_exam, 2);
                                    <td style="width:5%;"><b> @average_exam </b></td>
                                }

                                @if (coef_grade != 0 || average_grade != 0)
                                {
                                    decimal coef_subject = Decimal.Parse(@Html.DisplayTextFor(modelItem => item2.Coefficient));

                                    average_grade = average_grade / coef_grade;
                                    average_module += (average_grade * coef_subject);

                                    coef_module += coef_subject;

                                    average_grade = System.Math.Round(average_grade, 2);
                                    <td style="width:5%;"><b> @average_grade </b></td>
                                }

                            </tr>
                        </table>
                    }
                }
            </div>

                @if (coef_module != 0 || average_module != 0)
                {
                    average_module = average_module / coef_module;
                    average_module = System.Math.Round(average_module, 2);
                <div class="panel-footer">
                    <h3>Average in the module : @average_module</h3>
                </div>
                }
            </div>
            }
        </div>

}



